{"version":3,"file":"static/js/527.4fcffb33.chunk.js","mappings":"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","sources":["IpConfig.js","Services/AllServices.js","components/common/Map/mapStyles.js","components/common/Map/MobileUsers.js","components/common/Map/Map.js"],"sourcesContent":["const Ipconfig = {\r\n  // api version 2\r\n  BACKEND_IP: () => {\r\n    return \"http://13.127.123.145:9000/v2\"\r\n  },\r\n  // BACKEND_IP: () => { return 'http://scsservicing-env.eba-zu5hsnce.ap-south-1.elasticbeanstalk.com' },\r\n  // BACKEND_IP: () => {\r\n  //   return \"http://localhost:9000/v2\"\r\n  // },\r\n  PORT: () => {\r\n    return \"9000\"\r\n  },\r\n  VERSION: () => {\r\n    return \"1.0.8\"\r\n  },\r\n}\r\nexport default Ipconfig\r\n","import Ipconfig from \"../IpConfig\"\r\n\r\nconst AllServices = {\r\n  // login page\r\n  LOGIN: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskauth/weblogin`\r\n  },\r\n  // managers\r\n  // add employee\r\n  ADD_EMPLOYEE: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskemployee/addemp`\r\n  },\r\n  // get employees\r\n  GET_EMPLOYEE: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskemployee/getemp/${branch_id}`\r\n  },\r\n  // get all employees\r\n  GET_ALL_EMPLOYEE: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskemployee/getallemp`\r\n  },\r\n  // update employee data\r\n  UPDATE_EMPLOYEE: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskemployee/updateemp`\r\n  },\r\n  // delete employee\r\n  DELETE_EMPLOYEE: (id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskemployee/deleteemp/${id}`\r\n  },\r\n\r\n  // bills\r\n  DELETE_BILL: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbill/delbill/${billid}`\r\n  },\r\n  GET_BILL: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbill/getadminbill`\r\n  },\r\n\r\n  // search bills\r\n  SEARCH_BRANCH_BILLS: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/getbranchbills`\r\n  },\r\n  SEARCH_BILLS: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/allbills`\r\n  },\r\n  // get machine details\r\n  GET_MACHINE: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/getmachinedetails/${billid}`\r\n  },\r\n  // get billing locations\r\n  GET_LOCATIONS: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/getlocations`\r\n  },\r\n  // live locations\r\n  GET_LIVE_LOCATIONS: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/getlivelocations`\r\n  },\r\n  // login record\r\n  GET_LOGIN_RECORD: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/desksearch/getloginrec`\r\n  },\r\n  // GET_MACHINE_DATA: (billid) => {\r\n  //     return `${Ipconfig.BACKEND_IP()}/desksearch/getmachinedetails/${billid}`;\r\n  // },\r\n\r\n  TOTAL_BILLS_COUNT: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/totalbillscount/${branch_id}`\r\n  },\r\n  MONTH_BILLS_COUNT: (branch_id, month) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/monthbillscount/${branch_id}/${month}`\r\n  },\r\n  PENDING_BILLS_COUNT: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/totalpendingcount/${branch_id}`\r\n  },\r\n  RECIEVED_BILLS_COUNT: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/totalrecievedcount/${branch_id}`\r\n  },\r\n  COMPLETED_BILLS_COUNT: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/totalcompletedcount/${branch_id}`\r\n  },\r\n  TODAY_BILLS_COUNT: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskdashboard/todaybillscount/${branch_id}`\r\n  },\r\n\r\n  // manager\r\n  ADD_MANAGER: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskmanager/addmanager`\r\n  },\r\n  GET_MANAGERS: (adminid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskmanager/getmanagers/${adminid}`\r\n  },\r\n  UPDATE_MANAGER: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskmanager/updatemanager`\r\n  },\r\n  DELETE_MANAGER: (manager_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskmanager/delmanager/${manager_id}`\r\n  },\r\n\r\n  // branch\r\n  ADD_BRANCH: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbranch/addbranch`\r\n  },\r\n  GET_ALL_BRANCHES: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbranch/allbranchs`\r\n  },\r\n  UPDATE_BRANCH: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbranch/updatebranch`\r\n  },\r\n  DELETE_BRANCH: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbranch/delbranch/${branch_id}`\r\n  },\r\n  GET_BRANCH_NAME: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskbranch/branch/${branch_id}`\r\n  },\r\n\r\n  // update payment status\r\n  UPDATE_PAYMENT_STATUS: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskpayment/paymentstatus/${billid}`\r\n  },\r\n  UPDATE_BILL: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskpayment/billpayment/${billid}`\r\n  },\r\n\r\n  // get employee total bills and amount\r\n  GET_EMP_TOTAL_BILLS: (branch_id) => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskpayment/getempamounts/${branch_id}`\r\n  },\r\n  GET_ALL_EMP_TOTAL_BILLS: () => {\r\n    return `${Ipconfig.BACKEND_IP()}/deskpayment/getallempamounts`\r\n  },\r\n\r\n  GET_SER_SIGN: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/s3image/getsersign/${billid}`\r\n  },\r\n  // get c_sign\r\n  GET_CUS_SIGN: (billid) => {\r\n    return `${Ipconfig.BACKEND_IP()}/s3image/getcussign/${billid}`\r\n  },\r\n  // get Sign image from s3 bucket\r\n  GET_SIGN_IMAGE: (keyName) => {\r\n    return `${Ipconfig.BACKEND_IP()}/s3image/images/${keyName}`\r\n  },\r\n}\r\n\r\nexport default AllServices\r\n","const mapStyle = [\r\n  {\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#ebe3cd\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#523735\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#f5f1e6\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#c9b2a6\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.land_parcel\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#dcd2be\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.land_parcel\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ae9e90\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.natural\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#dfd2ae\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#dfd2ae\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#93817c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#a5b076\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#447530\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#f5f1e6\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#fdfcf8\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    stylers: [\r\n      {\r\n        color: \"#d1d1d1\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#f8c967\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#e9bc62\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway.controlled_access\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#e98d58\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway.controlled_access\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#db8555\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#806b63\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.line\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#dfd2ae\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.line\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#8f7d77\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.line\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ebe3cd\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.station\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#dfd2ae\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#b9d3c2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#92998d\",\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default mapStyle\r\n","import React, { useEffect, useContext, useState } from \"react\"\r\nimport Box from \"@mui/material/Box\"\r\nimport InputLabel from \"@mui/material/InputLabel\"\r\nimport MenuItem from \"@mui/material/MenuItem\"\r\nimport FormControl from \"@mui/material/FormControl\"\r\nimport Select from \"@mui/material/Select\"\r\nimport axios from \"axios\"\r\n\r\nimport { AuthContext } from \"../../AuthProvider\"\r\nimport AllServices from \"../../../Services/AllServices\"\r\n\r\nconst MobileUsers = ({ setSearchEmpId }) => {\r\n  const handleChange = (event) => {\r\n    setSearchEmpId(event.target.value)\r\n  }\r\n  const { user, setCurrentMenu, setCurrentMenuName } = useContext(AuthContext)\r\n  const [emp, setEmp] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (user.account_type == 0) {\r\n      axios\r\n        .get(AllServices.GET_ALL_EMPLOYEE())\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          if (response.data.status === 200) {\r\n            setEmp(response.data.emp)\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      axios\r\n        .get(AllServices.GET_EMPLOYEE(user.branch_id))\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          if (response.data.status === 200) {\r\n            setEmp(response.data.emp)\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 140 }} style={{ marginRight: 10 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ marginTop: -6 }}>\r\n          Select User\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          // value={searchType}\r\n          // defaultValue={searchType}\r\n          label=\"Select User\"\r\n          onChange={(event) => setSearchEmpId(event.target.value)}\r\n          style={{ height: 40, overflowY: \"scroll\" }}\r\n        >\r\n          {emp.map((res, index) => (\r\n            <MenuItem value={res.id} key={index}>\r\n              <span>{res.employee_name}</span>\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MobileUsers\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  Marker,\r\n  OverlayView,\r\n  Polyline,\r\n} from \"@react-google-maps/api\"\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\"\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\"\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\"\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\"\r\nimport TravelExploreIcon from \"@mui/icons-material/TravelExplore\"\r\nimport BatteryCharging50Icon from \"@mui/icons-material/BatteryCharging50\"\r\nimport BatteryUnknownIcon from \"@mui/icons-material/BatteryUnknown\"\r\nimport SearchIcon from \"@mui/icons-material/Search\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport TextField from \"@mui/material/TextField\"\r\nimport Button from \"@mui/material/Button\"\r\nimport axios from \"axios\"\r\nimport moment from \"moment\"\r\n\r\nimport \"./map.css\"\r\n\r\nimport mapstyle from \"./mapStyles\"\r\n\r\nimport { AuthContext } from \"../../AuthProvider\"\r\nimport BlueDot from \"../../../image/rec1.png\"\r\nimport RedDot from \"../../../image/rec3.png\"\r\nimport LoginLoc from \"../../../image/blue-dot.png\"\r\nimport GreenLocation from \"../../../image/location2.png\"\r\nimport BlackLocation from \"../../../image/location-pin2.png\"\r\nimport AllServices from \"../../../Services/AllServices\"\r\nimport MobileUsers from \"./MobileUsers\"\r\n\r\nconst API_KEY = \"AIzaSyC-bn74LAELfg-6LQQXwIeF6S07M_u5c-o\"\r\n\r\nconst containerStyle = {\r\n  height: \"550px\",\r\n  width: \"100%\",\r\n}\r\n\r\nconst pathCoordinates = [\r\n  {\r\n    id: 1,\r\n    lat: 9.92272,\r\n    lng: 78.000139,\r\n    customer_address: \"Address from madurai tamil nadu india address\",\r\n  },\r\n  {\r\n    id: 2,\r\n    lat: 9.929167,\r\n    lng: 78.093938,\r\n    customer_address: \"Address2 from madurai tamil nadu india address\",\r\n  },\r\n  {\r\n    id: 3,\r\n    lat: 9.902477,\r\n    lng: 78.032943,\r\n    customer_address: \"Address3 from madurai tamil nadu india address\",\r\n  },\r\n  {\r\n    id: 4,\r\n    lat: 9.918201,\r\n    lng: 77.906712,\r\n    customer_address: \"Address4 from madurai tamil nadu india address\",\r\n  },\r\n  {\r\n    id: 5,\r\n    lat: 9.98056,\r\n    lng: 78.092929,\r\n    customer_address: \"Address5 from madurai tamil nadu india address\",\r\n  },\r\n  {\r\n    id: 6,\r\n    lat: 9.90464,\r\n    lng: 78.199913,\r\n    customer_address: \"Address6 from madurai tamil nadu india address\",\r\n  },\r\n]\r\n\r\nconst ServiceMarker = ({\r\n  id,\r\n  latitude,\r\n  longitude,\r\n  point,\r\n  address,\r\n  setLocationId,\r\n  currentLocationId,\r\n}) => (\r\n  <div style={{ zIndex: 9 }}>\r\n    <div style={{ boxShadow: \"1px 2px 9px #66a3ff\" }}>\r\n      <div\r\n        style={{\r\n          backgroundColor: currentLocationId == id ? \"#222\" : \"#008060\",\r\n          padding: 10,\r\n          color: \"#fff\",\r\n          fontSize: 12,\r\n          position: \"absolute\",\r\n          bottom: 40,\r\n          borderRadius: \"50%\",\r\n          left: -16,\r\n          fontWeight: \"bold\",\r\n          boxShadow: \"1px 0px 2px #666\",\r\n          cursor: \"pointer\",\r\n          borderWidth: 0,\r\n        }}\r\n        onMouseEnter={() => {\r\n          setLocationId(id)\r\n        }}\r\n      >\r\n        {point < 9 ? `0${point}` : point}\r\n      </div>\r\n    </div>\r\n    <Marker\r\n      position={{ lat: latitude, lng: longitude }}\r\n      icon={{\r\n        url: currentLocationId == id ? BlackLocation : GreenLocation,\r\n      }}\r\n      onMouseOver={() => {\r\n        setLocationId(id)\r\n      }}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst LiveMarker = ({\r\n  id,\r\n  latitude,\r\n  longitude,\r\n  point,\r\n  address,\r\n  setLocationId,\r\n  currentLocationId,\r\n  res,\r\n}) => (\r\n  <div>\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#000\",\r\n        color: \"#fff\",\r\n        fontSize: 12,\r\n        padding: 5,\r\n      }}\r\n    >\r\n      {res.loc_time}\r\n      {res.mocked == 1 ? \" - MOCKED\" : null}\r\n      {res.battery == -1 ? null : ` - ${res.battery}%`}\r\n    </div>\r\n    <Marker\r\n      position={{ lat: latitude, lng: longitude }}\r\n      icon={{\r\n        url: res.mocked == 1 ? RedDot : BlueDot,\r\n      }}\r\n    />\r\n  </div>\r\n)\r\n\r\n// login record\r\nconst LoginMarker = ({\r\n  id,\r\n  latitude,\r\n  longitude,\r\n  point,\r\n  address,\r\n  setLocationId,\r\n  currentLocationId,\r\n  res,\r\n}) => (\r\n  <div>\r\n    {res.log_status == \"login\" ? (\r\n      <div style={{ boxShadow: \"1px 2px 9px #66a3ff\" }}>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            padding: 5,\r\n            color: \"blue\",\r\n            fontSize: 12,\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            left: 15,\r\n            fontWeight: \"bold\",\r\n            borderWidth: 0,\r\n            zIndex: 999,\r\n            width: 130,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {res.log_status} - {res.log_time}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div style={{ boxShadow: \"1px 2px 9px #66a3ff\" }}>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            padding: 5,\r\n            color: \"blue\",\r\n            fontSize: 12,\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 15,\r\n            fontWeight: \"bold\",\r\n            borderWidth: 0,\r\n            zIndex: 999,\r\n            width: 130,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {res.log_status} - {res.log_time}\r\n        </div>\r\n      </div>\r\n    )}\r\n    <Marker\r\n      position={{ lat: latitude, lng: longitude }}\r\n      icon={{\r\n        url: LoginLoc,\r\n      }}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Map = () => {\r\n  const { user, setCurrentMenu, setCurrentMenuName } = useContext(AuthContext)\r\n  // mobile app users\r\n  const [currentLocation, setLocation] = useState(\"\")\r\n  const [currentLocationId, setLocationId] = useState(\"\")\r\n\r\n  const [searchEmpId, setSearchEmpId] = useState(null)\r\n  const [searchDate, setDate] = React.useState(new Date())\r\n  const [bill_locations, setBillLocations] = useState([])\r\n  const [live_locations, setLiveLocations] = useState([])\r\n  const [login_rec, setLoginRec] = useState([])\r\n\r\n  const [center, setCenter] = useState({\r\n    lat: 9.92372,\r\n    lng: 78.0957,\r\n  })\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: API_KEY,\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds(center)\r\n    map.fitBounds(bounds)\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCurrentMenu(5)\r\n    setCurrentMenuName(\"Map\")\r\n  }, [])\r\n\r\n  const [zoomLevel, setZoomlevel] = useState(20)\r\n\r\n  const defaultMapOptions = {\r\n    // fullscreenControl: false,\r\n    mapTypeControl: false,\r\n    streetViewControl: false,\r\n    extraMapTypes: false,\r\n    styles: mapstyle,\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (currentLocationId != \"\") {\r\n  //     const cor = pathCoordinates.filter((d) => d.id == currentLocationId)\r\n  //     setCenter({\r\n  //       lat: cor[0].lat ? cor[0].lat : 9.92372,\r\n  //       lng: cor[0].lng ? cor[0].lng : 78.0957,\r\n  //     })\r\n  //   }\r\n  // }, [currentLocationId])\r\n\r\n  function handleZoom() {\r\n    setZoomlevel(this.getZoom()) //this refers to Google Map instance\r\n  }\r\n\r\n  const GetLocations = () => {\r\n    const date = moment(searchDate).format(\"YYYY-MM-DD\")\r\n    axios\r\n      .post(AllServices.GET_LOCATIONS(), {\r\n        searchDate: date,\r\n        searchEmpId: searchEmpId,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          for (var i in response.data) {\r\n            response.data[i].lat = parseFloat(response.data[i].lat)\r\n            response.data[i].lng = parseFloat(response.data[i].lng)\r\n          }\r\n          setBillLocations(response.data)\r\n          console.log(response.data)\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n    axios\r\n      .post(AllServices.GET_LIVE_LOCATIONS(), {\r\n        searchDate: date,\r\n        searchEmpId: searchEmpId,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          for (var i in response.data) {\r\n            response.data[i].lat = parseFloat(response.data[i].lat)\r\n            response.data[i].lng = parseFloat(response.data[i].lng)\r\n          }\r\n          setLiveLocations(response.data)\r\n          console.log(response.data)\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n    axios\r\n      .post(AllServices.GET_LOGIN_RECORD(), {\r\n        searchDate: date,\r\n        searchEmpId: searchEmpId,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          for (var i in response.data) {\r\n            response.data[i].lat = parseFloat(response.data[i].lat)\r\n            response.data[i].lng = parseFloat(response.data[i].lng)\r\n          }\r\n          setLoginRec(response.data)\r\n          console.log(response.data)\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <div>\r\n      <Grid container>\r\n        <Grid container style={{ width: \"60%\" }}>\r\n          <Grid xs={4} md={4} lg={4} item style={{ marginTop: 4 }}>\r\n            <MobileUsers setSearchEmpId={setSearchEmpId} searchType={\"ALL\"} />\r\n          </Grid>\r\n          <Grid xs={4} md={4} lg={4} item style={{ marginTop: 4 }}>\r\n            {/* <DesktopDatePicker defaultValue={moment()} format={dateFormat} /> */}\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                disableFuture\r\n                label=\"Date\"\r\n                value={searchDate}\r\n                onChange={(newValue) => {\r\n                  setDate(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} size=\"small\" />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid\r\n            xs={2}\r\n            md={2}\r\n            lg={2}\r\n            item\r\n            style={{ marginTop: 4, marginLeft: 5, alignSelf: \"center\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ padding: 7, width: \"95%\" }}\r\n              onClick={(e) => {\r\n                GetLocations()\r\n              }}\r\n            >\r\n              <TravelExploreIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <br />\r\n      <Grid container>\r\n        <Grid xs={8} md={8} lg={8} item>\r\n          <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={center}\r\n            zoom={zoomLevel}\r\n            defaultZoom={15}\r\n            onUnmount={onUnmount}\r\n            options={defaultMapOptions}\r\n            defaultOptions={defaultMapOptions}\r\n            onClick={(e) => {\r\n              setLocationId(\"\")\r\n            }}\r\n            // onZoomChanged={handleZoom}\r\n          >\r\n            <Polyline\r\n              path={live_locations}\r\n              geodesic={true}\r\n              options={{\r\n                strokeColor: \"green\",\r\n                strokeOpacity: 0.76,\r\n                strokeWeight: 3,\r\n              }}\r\n            />\r\n            {login_rec.map((res) => (\r\n              <OverlayView\r\n                position={{\r\n                  lat: parseFloat(res.lat),\r\n                  lng: parseFloat(res.lng),\r\n                }}\r\n                mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n                style={{\r\n                  backgroundColor: \"#000\",\r\n                }}\r\n                key={res.id}\r\n              >\r\n                <LoginMarker\r\n                  id={res.id}\r\n                  latitude={parseFloat(res.lat)}\r\n                  longitude={parseFloat(res.lng)}\r\n                  point={res.id}\r\n                  address={res.customer_address}\r\n                  setLocationId={setLocationId}\r\n                  currentLocationId={currentLocationId}\r\n                  res={res}\r\n                />\r\n              </OverlayView>\r\n            ))}\r\n            {live_locations.map((res) => (\r\n              <OverlayView\r\n                position={{\r\n                  lat: parseFloat(res.lat),\r\n                  lng: parseFloat(res.lng),\r\n                }}\r\n                mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n                style={{\r\n                  backgroundColor: \"#000\",\r\n                }}\r\n                key={res.id}\r\n              >\r\n                <LiveMarker\r\n                  id={res.id}\r\n                  latitude={parseFloat(res.lat)}\r\n                  longitude={parseFloat(res.lng)}\r\n                  point={res.id}\r\n                  address={res.customer_address}\r\n                  setLocationId={setLocationId}\r\n                  currentLocationId={currentLocationId}\r\n                  res={res}\r\n                />\r\n              </OverlayView>\r\n            ))}\r\n            {bill_locations.map((res) => (\r\n              <OverlayView\r\n                position={{\r\n                  lat: parseFloat(res.lat),\r\n                  lng: parseFloat(res.lng),\r\n                }}\r\n                mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n                style={{\r\n                  backgroundColor: \"#000\",\r\n                }}\r\n                key={res.id}\r\n              >\r\n                <ServiceMarker\r\n                  id={res.id}\r\n                  latitude={parseFloat(res.lat)}\r\n                  longitude={parseFloat(res.lng)}\r\n                  point={res.id}\r\n                  address={res.customer_address}\r\n                  setLocationId={setLocationId}\r\n                  currentLocationId={currentLocationId}\r\n                />\r\n              </OverlayView>\r\n            ))}\r\n          </GoogleMap>\r\n        </Grid>\r\n        <Grid\r\n          xs={4}\r\n          md={4}\r\n          lg={4}\r\n          item\r\n          className=\"addressBox\"\r\n          style={{ maxHeight: containerStyle.height }}\r\n        >\r\n          {bill_locations.map((res) => (\r\n            <button\r\n              style={{\r\n                backgroundColor:\r\n                  currentLocationId == res.id ? \"#333\" : \"#00d6a2\",\r\n                color: currentLocationId == res.id ? \"#fff\" : \"#333\",\r\n                padding: 8,\r\n                marginBottom: 5,\r\n                width: \"100%\",\r\n                borderWidth: 0,\r\n                textAlign: \"left\",\r\n                fontSize: 16,\r\n                cursor: \"pointer\",\r\n                boxShadow: \"1px 1px 2px #888\",\r\n                borderRadius: 3,\r\n              }}\r\n              onClick={() => {\r\n                setLocationId(res.id)\r\n                setCenter({\r\n                  lat: parseFloat(res.lat),\r\n                  lng: parseFloat(res.lng),\r\n                })\r\n                setZoomlevel(16)\r\n              }}\r\n              key={res.id}\r\n            >\r\n              {res.id}\r\n              {` - `}\r\n              BILL ID: {res.invoice_id}\r\n              {` - `}\r\n              ADDRESS: {res.customer_address}\r\n              <p\r\n                style={{\r\n                  borderTopStyle: \"solid\",\r\n                  borderTopWidth: 1,\r\n                  borderTopColor: \"#888\",\r\n                  paddingTop: 5,\r\n                }}\r\n              >\r\n                In Time :{res.in_time} - Out Time: {res.out_time}\r\n              </p>\r\n            </button>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <div>Map Not Loaded</div>\r\n  )\r\n}\r\n\r\nexport default Map\r\n"],"names":["BACKEND_IP","PORT","VERSION","AllServices","LOGIN","Ipconfig","ADD_EMPLOYEE","GET_EMPLOYEE","branch_id","GET_ALL_EMPLOYEE","UPDATE_EMPLOYEE","DELETE_EMPLOYEE","id","DELETE_BILL","billid","GET_BILL","SEARCH_BRANCH_BILLS","SEARCH_BILLS","GET_MACHINE","GET_LOCATIONS","GET_LIVE_LOCATIONS","GET_LOGIN_RECORD","TOTAL_BILLS_COUNT","MONTH_BILLS_COUNT","month","PENDING_BILLS_COUNT","RECIEVED_BILLS_COUNT","COMPLETED_BILLS_COUNT","TODAY_BILLS_COUNT","ADD_MANAGER","GET_MANAGERS","adminid","UPDATE_MANAGER","DELETE_MANAGER","manager_id","ADD_BRANCH","GET_ALL_BRANCHES","UPDATE_BRANCH","DELETE_BRANCH","GET_BRANCH_NAME","UPDATE_PAYMENT_STATUS","UPDATE_BILL","GET_EMP_TOTAL_BILLS","GET_ALL_EMP_TOTAL_BILLS","GET_SER_SIGN","GET_CUS_SIGN","GET_SIGN_IMAGE","keyName","elementType","stylers","color","featureType","setSearchEmpId","useContext","AuthContext","user","setCurrentMenu","setCurrentMenuName","useState","emp","setEmp","useEffect","account_type","axios","then","response","console","log","data","status","catch","error","Box","sx","minWidth","style","marginRight","FormControl","fullWidth","InputLabel","marginTop","Select","labelId","label","onChange","event","target","value","height","overflowY","map","res","index","MenuItem","employee_name","containerStyle","width","ServiceMarker","latitude","longitude","point","setLocationId","address","currentLocationId","zIndex","boxShadow","backgroundColor","padding","fontSize","position","bottom","borderRadius","left","fontWeight","cursor","borderWidth","onMouseEnter","lat","lng","icon","url","BlackLocation","GreenLocation","onMouseOver","LiveMarker","loc_time","mocked","battery","RedDot","BlueDot","LoginMarker","log_status","textAlign","log_time","right","LoginLoc","searchEmpId","React","Date","searchDate","setDate","bill_locations","setBillLocations","live_locations","setLiveLocations","login_rec","setLoginRec","center","setCenter","isLoaded","useJsApiLoader","googleMapsApiKey","setMap","onUnmount","bounds","window","google","maps","LatLngBounds","fitBounds","zoomLevel","setZoomlevel","defaultMapOptions","mapTypeControl","streetViewControl","extraMapTypes","styles","mapstyle","Grid","container","xs","md","lg","item","searchType","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","disableFuture","newValue","renderInput","params","TextField","size","marginLeft","alignSelf","Button","variant","onClick","e","date","moment","format","i","parseFloat","GetLocations","TravelExplore","mapContainerStyle","zoom","defaultZoom","options","defaultOptions","path","geodesic","strokeColor","strokeOpacity","strokeWeight","mapPaneName","OverlayView","customer_address","className","maxHeight","marginBottom","invoice_id","borderTopStyle","borderTopWidth","borderTopColor","paddingTop","in_time","out_time"],"sourceRoot":""}